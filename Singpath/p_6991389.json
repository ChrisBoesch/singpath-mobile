{"problems": [{"description": "Create a function that takes two integers as parameters and adds all the integers between the two numbers including the passed in parameters.", "lines": ["def sum_range(a,b):", "    total=0", "    i=a", "    while i<=b:", "        total+=i", "        i+=1", "    return total"], "solution": "def sum_range(a,b):\r\n    total=0\r\n    i=a\r\n    while i<=b:\r\n        total+=i\r\n        i+=1\r\n    return total", "path_id": 6920762, "depth": 7, "problemset_id": 6991389, "examples": ">>> sum_range(2,3)\n 5\n>>> sum_range(4,8)\n  30", "is_mobile_problem": true, "problemsetorder": 20, "id": 7437060, "nonErrorResults": {"1327456": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1327": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1274653": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1273456": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1346": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "123745": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "132": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "123746": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "132746": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "132745": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "123456": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1324657": {"solved": false, "results": [{"expected": 5, "received": "7", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "35", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "132467": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "132465": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1234567": {"solved": true, "results": [{"expected": 5, "received": "5", "call": "sum_range(2,3)", "correct": true}, {"expected": 30, "received": "30", "call": "sum_range(4,8)", "correct": true}], "printed": ""}, "13462": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "127453": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "13246": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "127456": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "127345": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "127346": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1324567": {"solved": true, "results": [{"expected": 5, "received": "5", "call": "sum_range(2,3)", "correct": true}, {"expected": 30, "received": "30", "call": "sum_range(4,8)", "correct": true}], "printed": ""}, "134627": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1237": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1273465": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1273": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1237465": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "123": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "127": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "123465": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "123467": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1234657": {"solved": false, "results": [{"expected": 5, "received": "7", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "35", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "13": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "12": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1274563": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "12745": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "132456": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1327465": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "12746": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "1237456": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "127465": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "127463": {"solved": false, "results": [{"expected": 5, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range(4,8)", "correct": false}], "printed": ""}, "12346": {"solved": false, "results": [{"expected": 5, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range(4,8)", "correct": false}], "printed": ""}}, "name": "Sum Problems in Range"}, {"description": "Create a function called sum_range() that takes two integers as parameters and adds all the integers between the two numbers including both of the passed in integers. ", "lines": ["def sum_even(a,b):", "    total=0", "    i=a", "    while i<=b:", "        if i%2==0:", "          total+=i", "        i+=1", "    return total"], "solution": "def sum_even(a,b):\r\n    total=0\r\n    i=a\r\n    while i<=b:\r\n        if i%2==0:\r\n          total+=i\r\n        i+=1\r\n    return total", "path_id": 6920762, "depth": 8, "problemset_id": 6920764, "examples": ">>> sum_range(2,3)\n 5\n>>> sum_range(4,8)\n  30", "is_mobile_problem": true, "problemsetorder": 30, "id": 7432164, "nonErrorResults": {}, "name": "Sum Number in Range"}, {"description": "Count the number of multiples of 9 in the range 10 to 90", "lines": ["def count9Multiples(start, stop):", "    totalSum = 0", "    for i in range(start,stop):", "        if i % 9 == 0:", "          totalSum = totalSum + 1", "    return totalSum"], "solution": "def count9Multiples(start, stop):\r\n    totalSum = 0\r\n    for i in range(start,stop):\r\n        if i % 9 == 0:\r\n          totalSum = totalSum + 1\r\n    return totalSum", "path_id": 6920762, "depth": 6, "problemset_id": 6991389, "examples": "findMultipleSum()\n\nanswer : 8", "is_mobile_problem": true, "problemsetorder": 140, "id": 7559915, "nonErrorResults": {"1235": {"solved": false, "results": [{"expected": 8, "received": "None", "call": "count9Multiples(10,90)", "correct": false}, {"expected": 1, "received": "None", "call": "count9Multiples(1,10)", "correct": false}, {"expected": 22, "received": "None", "call": "count9Multiples(1,200)", "correct": false}], "printed": ""}, "126345": {"solved": false, "results": [{"expected": 8, "received": "0", "call": "count9Multiples(10,90)", "correct": false}, {"expected": 1, "received": "0", "call": "count9Multiples(1,10)", "correct": false}, {"expected": 22, "received": "0", "call": "count9Multiples(1,200)", "correct": false}], "printed": ""}, "12345": {"solved": false, "results": [{"expected": 8, "received": "None", "call": "count9Multiples(10,90)", "correct": false}, {"expected": 1, "received": "None", "call": "count9Multiples(1,10)", "correct": false}, {"expected": 22, "received": "None", "call": "count9Multiples(1,200)", "correct": false}], "printed": ""}, "12": {"solved": false, "results": [{"expected": 8, "received": "None", "call": "count9Multiples(10,90)", "correct": false}, {"expected": 1, "received": "None", "call": "count9Multiples(1,10)", "correct": false}, {"expected": 22, "received": "None", "call": "count9Multiples(1,200)", "correct": false}], "printed": ""}, "12635": {"solved": false, "results": [{"expected": 8, "received": "0", "call": "count9Multiples(10,90)", "correct": false}, {"expected": 1, "received": "0", "call": "count9Multiples(1,10)", "correct": false}, {"expected": 22, "received": "0", "call": "count9Multiples(1,200)", "correct": false}], "printed": ""}, "126": {"solved": false, "results": [{"expected": 8, "received": "0", "call": "count9Multiples(10,90)", "correct": false}, {"expected": 1, "received": "0", "call": "count9Multiples(1,10)", "correct": false}, {"expected": 22, "received": "0", "call": "count9Multiples(1,200)", "correct": false}], "printed": ""}, "123456": {"solved": true, "results": [{"expected": 8, "received": "8", "call": "count9Multiples(10,90)", "correct": true}, {"expected": 1, "received": "1", "call": "count9Multiples(1,10)", "correct": true}, {"expected": 22, "received": "22", "call": "count9Multiples(1,200)", "correct": true}], "printed": ""}, "12356": {"solved": false, "results": [{"expected": 8, "received": "80", "call": "count9Multiples(10,90)", "correct": false}, {"expected": 1, "received": "9", "call": "count9Multiples(1,10)", "correct": false}, {"expected": 22, "received": "199", "call": "count9Multiples(1,200)", "correct": false}], "printed": ""}}, "name": "Count Multiples of 9"}, {"description": "The range function returns a list of integers from 0 to the number passed in minus 1. You can use range() to iterate from 0 up to 1 less than some number. Create the function sum_to_n() that takes a number as a parameter and returns the sum of all numbers between 0 and the passed in number. ", "lines": ["def sum_to_n(n):", "    total = 0", "    for x in range(n):", "        total += x", "    return total"], "solution": "def sum_to_n(n):\r\n    total = 0\r\n    for x in range(n):\r\n        total += x\r\n    return total", "path_id": 6920762, "depth": 5, "problemset_id": 6991389, "examples": ">>> sum_to_n(3)\r\n 3\r\n>>> sum_to_n(5)\r\n 10\r\n>>> sum_to_n(6)\r\n 15", "is_mobile_problem": true, "problemsetorder": 70, "id": 7994937, "nonErrorResults": {"1234": {"solved": false, "results": [{"expected": 3, "received": "None", "call": "sum_to_n(3)", "correct": false}, {"expected": 10, "received": "None", "call": "sum_to_n(5)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_to_n(6)", "correct": false}], "printed": ""}, "12534": {"solved": false, "results": [{"expected": 3, "received": "0", "call": "sum_to_n(3)", "correct": false}, {"expected": 10, "received": "0", "call": "sum_to_n(5)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_to_n(6)", "correct": false}], "printed": ""}, "12": {"solved": false, "results": [{"expected": 3, "received": "None", "call": "sum_to_n(3)", "correct": false}, {"expected": 10, "received": "None", "call": "sum_to_n(5)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_to_n(6)", "correct": false}], "printed": ""}, "12345": {"solved": true, "results": [{"expected": 3, "received": "3", "call": "sum_to_n(3)", "correct": true}, {"expected": 10, "received": "10", "call": "sum_to_n(5)", "correct": true}, {"expected": 15, "received": "15", "call": "sum_to_n(6)", "correct": true}], "printed": ""}, "125": {"solved": false, "results": [{"expected": 3, "received": "0", "call": "sum_to_n(3)", "correct": false}, {"expected": 10, "received": "0", "call": "sum_to_n(5)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_to_n(6)", "correct": false}], "printed": ""}}, "name": "Range"}, {"description": "You can pass 2 numbers in to the range() function in order to generate a list of integers from the first number to the second number minus 1. Create the function sum_range() that takes two numbers as parameters and returns the sum of all numbers between the first number and the second number.", "lines": ["def sum_range(a,b):", "    total = 0", "    for x in range(a,b):", "        total += x", "    return total"], "solution": "def sum_range(a,b):\n    total = 0\n    for x in range(a,b):\n        total += x\n    return total", "path_id": 6920762, "depth": 5, "problemset_id": 6991389, "examples": "For example, if you place 3 and 5 into sum_range() then the result will be 3+4 = 7.\n\nIf you place 3 and 8 into sum_range() then the result will be 3+4+5+6+7 = 25", "is_mobile_problem": true, "problemsetorder": 80, "id": 7994092, "nonErrorResults": {"1234": {"solved": false, "results": [{"expected": 2, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 18, "received": "None", "call": "sum_range(5,8)", "correct": false}, {"expected": 6, "received": "None", "call": "sum_range(0,4)", "correct": false}], "printed": ""}, "12534": {"solved": false, "results": [{"expected": 2, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 18, "received": "0", "call": "sum_range(5,8)", "correct": false}, {"expected": 6, "received": "0", "call": "sum_range(0,4)", "correct": false}], "printed": ""}, "12": {"solved": false, "results": [{"expected": 2, "received": "None", "call": "sum_range(2,3)", "correct": false}, {"expected": 18, "received": "None", "call": "sum_range(5,8)", "correct": false}, {"expected": 6, "received": "None", "call": "sum_range(0,4)", "correct": false}], "printed": ""}, "12345": {"solved": true, "results": [{"expected": 2, "received": "2", "call": "sum_range(2,3)", "correct": true}, {"expected": 18, "received": "18", "call": "sum_range(5,8)", "correct": true}, {"expected": 6, "received": "6", "call": "sum_range(0,4)", "correct": true}], "printed": ""}, "125": {"solved": false, "results": [{"expected": 2, "received": "0", "call": "sum_range(2,3)", "correct": false}, {"expected": 18, "received": "0", "call": "sum_range(5,8)", "correct": false}, {"expected": 6, "received": "0", "call": "sum_range(0,4)", "correct": false}], "printed": ""}}, "name": "Sum Range"}, {"description": "Create the function sum_range_inclusive() that takes two numbers as parameters and returns the sum of all numbers between the first number and the second number and also include the second number in the sum. ", "lines": ["def sum_range_inclusive(a,b):", "    total = 0", "    for x in range(a,b):", "        total += x", "    return total + b", "    return total"], "solution": "def sum_range_inclusive(a,b):\n    total = 0\n    for x in range(a,b):\n        total += x\n    return total + b\n    return total", "path_id": 6920762, "depth": 6, "problemset_id": 6991389, "examples": "You can pass 2 numbers in to the range() function in order to generate a list of integers from the first number to the second number minus 1. \n\n>>> sum_range_inclusive(2,3)\n 5\n>>> sum_range_inclusive(1,3)\n 6\n>>> sum_range_inclusive(2,5)\n 14", "is_mobile_problem": true, "problemsetorder": 90, "id": 7998140, "nonErrorResults": {"152": {"solved": true, "results": [], "printed": ""}, "125": {"solved": true, "results": [], "printed": ""}, "156": {"solved": true, "results": [], "printed": ""}, "1342": {"solved": true, "results": [], "printed": ""}, "163452": {"solved": true, "results": [], "printed": ""}, "1345": {"solved": true, "results": [], "printed": ""}, "1346": {"solved": true, "results": [], "printed": ""}, "15342": {"solved": true, "results": [], "printed": ""}, "126345": {"solved": true, "results": [], "printed": ""}, "12634": {"solved": true, "results": [], "printed": ""}, "15346": {"solved": true, "results": [], "printed": ""}, "134": {"solved": true, "results": [], "printed": ""}, "13426": {"solved": true, "results": [], "printed": ""}, "13425": {"solved": true, "results": [], "printed": ""}, "123456": {"solved": true, "results": [], "printed": ""}, "16234": {"solved": true, "results": [], "printed": ""}, "125346": {"solved": true, "results": [], "printed": ""}, "1634": {"solved": true, "results": [], "printed": ""}, "13462": {"solved": true, "results": [], "printed": ""}, "12346": {"solved": true, "results": [], "printed": ""}, "134256": {"solved": true, "results": [], "printed": ""}, "13465": {"solved": true, "results": [], "printed": ""}, "156342": {"solved": true, "results": [], "printed": ""}, "1256": {"solved": true, "results": [], "printed": ""}, "1526": {"solved": true, "results": [], "printed": ""}, "134562": {"solved": true, "results": [], "printed": ""}, "153426": {"solved": true, "results": [], "printed": ""}, "134625": {"solved": true, "results": [], "printed": ""}, "1652": {"solved": true, "results": [], "printed": ""}, "1562": {"solved": true, "results": [], "printed": ""}, "165342": {"solved": true, "results": [], "printed": ""}, "134652": {"solved": true, "results": [], "printed": ""}, "1234": {"solved": true, "results": [], "printed": ""}, "152634": {"solved": true, "results": [], "printed": ""}, "134526": {"solved": true, "results": [], "printed": ""}, "163425": {"solved": true, "results": [], "printed": ""}, "16534": {"solved": true, "results": [], "printed": ""}, "152346": {"solved": true, "results": [], "printed": ""}, "15634": {"solved": true, "results": [], "printed": ""}, "153462": {"solved": true, "results": [], "printed": ""}, "162534": {"solved": true, "results": [], "printed": ""}, "16345": {"solved": true, "results": [], "printed": ""}, "134265": {"solved": true, "results": [], "printed": ""}, "1265": {"solved": true, "results": [], "printed": ""}, "126": {"solved": true, "results": [], "printed": ""}, "16342": {"solved": true, "results": [], "printed": ""}, "165": {"solved": true, "results": [], "printed": ""}, "123465": {"solved": true, "results": [], "printed": ""}, "162": {"solved": true, "results": [], "printed": ""}, "12534": {"solved": true, "results": [], "printed": ""}, "12": {"solved": true, "results": [], "printed": ""}, "15": {"solved": true, "results": [], "printed": ""}, "14": {"solved": true, "results": [], "printed": ""}, "1625": {"solved": true, "results": [], "printed": ""}, "165234": {"solved": true, "results": [], "printed": ""}, "13456": {"solved": true, "results": [], "printed": ""}, "156234": {"solved": true, "results": [], "printed": ""}, "16": {"solved": true, "results": [], "printed": ""}, "13452": {"solved": true, "results": [], "printed": ""}, "15234": {"solved": true, "results": [], "printed": ""}, "1534": {"solved": true, "results": [], "printed": ""}, "126534": {"solved": true, "results": [], "printed": ""}, "162345": {"solved": true, "results": [], "printed": ""}, "12345": {"solved": true, "results": [], "printed": ""}, "125634": {"solved": true, "results": [], "printed": ""}}, "name": "Range Inclusive"}, {"description": "You can pass 3 numbers in to the range() function in order to generate a list of integers that starts at the first number and then 'steps' by the last number up to the second number. Create the function sum_range_step() that takes three numbers as parameters and returns the sum of all numbers between the first number and the second number while incrementing by the third number. ", "lines": ["def sum_range_step(a,b,step):", "    total = 0", "    for x in range(a,b,step):", "        total += x", "    return total", "    for x in range(step,a,b):", "        total += step"], "solution": "def sum_range_step(a,b,step):\r\n    total = 0\r\n    for x in range(a,b,step):\r\n        total += x\r\n    return total\r\n    for x in range(step,a,b):\r\n        total += step", "path_id": 6920762, "depth": 6, "problemset_id": 6991389, "examples": "For example: range(1,8,2) returns the list [1,3,5,7]. The list starts at 1 and then increments by 2 until 8 minus 1 (7).\n\nExample 1: sum_range_step(1,5,2) will return the value 4\nExample 2: sum_range_step(2,10,3) will return the value 15\nExample 3: sum_range_step(5,20,5) will return the value 30", "is_mobile_problem": true, "problemsetorder": 100, "id": 7999091, "nonErrorResults": {"123475": {"solved": false, "results": [{"expected": 4, "received": "8", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "24", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "45", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "16742": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "16472": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1267": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12564": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "123745": {"solved": false, "results": [{"expected": 4, "received": "8", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "24", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "45", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1256437": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1642375": {"solved": false, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "9", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "15", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1672345": {"solved": true, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "15", "call": "sum_range_step(2,10,3)", "correct": true}, {"expected": 30, "received": "30", "call": "sum_range_step(5,20,5)", "correct": true}], "printed": ""}, "1264537": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "16725": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1642537": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "167425": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "123764": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12374": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1237645": {"solved": false, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "9", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "15", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1234567": {"solved": true, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "15", "call": "sum_range_step(2,10,3)", "correct": true}, {"expected": 30, "received": "30", "call": "sum_range_step(5,20,5)", "correct": true}], "printed": ""}, "12675": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12674": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1267345": {"solved": true, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "15", "call": "sum_range_step(2,10,3)", "correct": true}, {"expected": 30, "received": "30", "call": "sum_range_step(5,20,5)", "correct": true}], "printed": ""}, "12567": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1264375": {"solved": false, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "9", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "15", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "164725": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "125374": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "126745": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1674": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1253467": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1672": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "164237": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1234": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1237": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "125347": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "126475": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "126437": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "125647": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12534": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12645": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12647": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "125": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "164": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "16425": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "167": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "123467": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "167234": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1647": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1256734": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1642": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1264": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1237564": {"solved": false, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "9", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "15", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1267534": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12375": {"solved": false, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "9", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "15", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "126734": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "125674": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12537": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1234675": {"solved": true, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "15", "call": "sum_range_step(2,10,3)", "correct": true}, {"expected": 30, "received": "30", "call": "sum_range_step(5,20,5)", "correct": true}], "printed": ""}, "12345": {"solved": true, "results": [{"expected": 4, "received": "4", "call": "sum_range_step(1,5,2)", "correct": true}, {"expected": 15, "received": "15", "call": "sum_range_step(2,10,3)", "correct": true}, {"expected": 30, "received": "30", "call": "sum_range_step(5,20,5)", "correct": true}], "printed": ""}, "1253764": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "12347": {"solved": false, "results": [{"expected": 4, "received": "None", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "None", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "None", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}, "1672534": {"solved": false, "results": [{"expected": 4, "received": "0", "call": "sum_range_step(1,5,2)", "correct": false}, {"expected": 15, "received": "0", "call": "sum_range_step(2,10,3)", "correct": false}, {"expected": 30, "received": "0", "call": "sum_range_step(5,20,5)", "correct": false}], "printed": ""}}, "name": "Range Step"}, {"description": "Create a function that when passed a list of strings, changes all even indexed strings to be upper case while odd ones remain the same.", "lines": ["def capitalize_even(aList):", "  result = []", "  for i in range(len(aList)):", "    if i%2 == 0:", "      result.append(aList[i].upper())", "    else:", "      result.append(aList[i])", "  return result"], "solution": "def capitalize_even(aList):\n  result = []\n  for i in range(len(aList)):\n    if i%2 == 0:\n      result.append(aList[i].upper())\n    else:\n      result.append(aList[i])\n  return result", "path_id": 6920762, "depth": 8, "problemset_id": 6991389, "examples": "For example, \ncapitalize_even(['Apple','Banana','Chiku','Durian','Elderberry','Fig','Grape','Honeydew'])\n['APPLE', 'Banana', 'CHIKU', 'Durian', 'ELDERBERRY', 'Fig', 'GRAPE', 'Honeydew']\n", "is_mobile_problem": true, "problemsetorder": 40, "id": 7515088, "nonErrorResults": {}, "name": "Capitalize Even Items"}, {"description": "# Note: This is for beginners\nGet the alphabet count from the fruits given the alphabet as the argument", "lines": ["def getAlphaCount(c, aString):", "    counter = 0", "    for x in aString.lower():", "        if x==c.lower():", "          counter +=1 ", "    return counter"], "solution": "def getAlphaCount(c, aString):\r\n    counter = 0\r\n    for x in aString.lower():\r\n        if x==c.lower():\r\n          counter +=1 \r\n    return counter", "path_id": 6920762, "depth": 6, "problemset_id": 6991389, "examples": ">>> getAlphaCount('a')\n6\n>>> getAlphaCount('b')\n2\n>>> getAlphaCount('c')\n1", "is_mobile_problem": true, "problemsetorder": 50, "id": 7517062, "nonErrorResults": {"1235": {"solved": false, "results": [{"expected": 6, "received": "None", "call": "getAlphaCount('a', 'aAaAaAbbb')", "correct": false}, {"expected": 2, "received": "None", "call": "getAlphaCount('b','bigboy')", "correct": false}, {"expected": 1, "received": "None", "call": "getAlphaCount('c','cat')", "correct": false}, {"expected": 0, "received": "None", "call": "getAlphaCount('b','cat')", "correct": false}], "printed": ""}, "126345": {"solved": false, "results": [{"expected": 6, "received": "0", "call": "getAlphaCount('a', 'aAaAaAbbb')", "correct": false}, {"expected": 2, "received": "0", "call": "getAlphaCount('b','bigboy')", "correct": false}, {"expected": 1, "received": "0", "call": "getAlphaCount('c','cat')", "correct": false}, {"expected": 0, "received": "0", "call": "getAlphaCount('b','cat')", "correct": true}], "printed": ""}, "12345": {"solved": false, "results": [{"expected": 6, "received": "None", "call": "getAlphaCount('a', 'aAaAaAbbb')", "correct": false}, {"expected": 2, "received": "None", "call": "getAlphaCount('b','bigboy')", "correct": false}, {"expected": 1, "received": "None", "call": "getAlphaCount('c','cat')", "correct": false}, {"expected": 0, "received": "None", "call": "getAlphaCount('b','cat')", "correct": false}], "printed": ""}, "12": {"solved": false, "results": [{"expected": 6, "received": "None", "call": "getAlphaCount('a', 'aAaAaAbbb')", "correct": false}, {"expected": 2, "received": "None", "call": "getAlphaCount('b','bigboy')", "correct": false}, {"expected": 1, "received": "None", "call": "getAlphaCount('c','cat')", "correct": false}, {"expected": 0, "received": "None", "call": "getAlphaCount('b','cat')", "correct": false}], "printed": ""}, "12635": {"solved": false, "results": [{"expected": 6, "received": "0", "call": "getAlphaCount('a', 'aAaAaAbbb')", "correct": false}, {"expected": 2, "received": "0", "call": "getAlphaCount('b','bigboy')", "correct": false}, {"expected": 1, "received": "0", "call": "getAlphaCount('c','cat')", "correct": false}, {"expected": 0, "received": "0", "call": "getAlphaCount('b','cat')", "correct": true}], "printed": ""}, "126": {"solved": false, "results": [{"expected": 6, "received": "0", "call": "getAlphaCount('a', 'aAaAaAbbb')", "correct": false}, {"expected": 2, "received": "0", "call": "getAlphaCount('b','bigboy')", "correct": false}, {"expected": 1, "received": "0", "call": "getAlphaCount('c','cat')", "correct": false}, {"expected": 0, "received": "0", "call": "getAlphaCount('b','cat')", "correct": true}], "printed": ""}, "123456": {"solved": true, "results": [{"expected": 6, "received": "6", "call": "getAlphaCount('a', 'aAaAaAbbb')", "correct": true}, {"expected": 2, "received": "2", "call": "getAlphaCount('b','bigboy')", "correct": true}, {"expected": 1, "received": "1", "call": "getAlphaCount('c','cat')", "correct": true}, {"expected": 0, "received": "0", "call": "getAlphaCount('b','cat')", "correct": true}], "printed": ""}, "12356": {"solved": false, "results": [{"expected": 6, "received": "9", "call": "getAlphaCount('a', 'aAaAaAbbb')", "correct": false}, {"expected": 2, "received": "6", "call": "getAlphaCount('b','bigboy')", "correct": false}, {"expected": 1, "received": "3", "call": "getAlphaCount('c','cat')", "correct": false}, {"expected": 0, "received": "3", "call": "getAlphaCount('b','cat')", "correct": false}], "printed": ""}}, "name": "Alphabet count"}, {"description": "# Note: This is for beginner\nCreate a method to change an alphabet into asterisks.", "lines": ["def replace(c, aString):", "  result = ''", "  for x in aString:", "    if x.lower()==c.lower():", "      result+='*'", "    else: result+=x", "  return result"], "solution": "def replace(c, aString):\r\n  result = ''\r\n  for x in aString:\r\n    if x.lower()==c.lower():\r\n      result+='*'\r\n    else: result+=x\r\n  return result", "path_id": 6920762, "depth": 7, "problemset_id": 6991389, "examples": ">>> getFruits('b')\n['apple', '*anana', 'chiku', 'durian', 'elder*erry', 'fig', 'grape', 'honeydew']\n>>> getFruits('a')\n['*pple', 'b*n*n*', 'chiku', 'duri*n', 'elderberry', 'fig', 'gr*pe', 'honeydew']", "is_mobile_problem": true, "problemsetorder": 60, "id": 7515091, "nonErrorResults": {"1234": {"solved": true, "results": [{"expected": 2, "received": "2", "call": "number", "correct": true}, {"expected": "Oz", "received": "Oz", "call": "wizard", "correct": true}, {"expected": 3, "received": "3", "call": "addOne(2)", "correct": true}], "printed": ""}, "2134": {"solved": true, "results": [{"expected": 2, "received": "2", "call": "number", "correct": true}, {"expected": "Oz", "received": "Oz", "call": "wizard", "correct": true}, {"expected": 3, "received": "3", "call": "addOne(2)", "correct": true}], "printed": ""}, "2341": {"solved": true, "results": [{"expected": 2, "received": "2", "call": "number", "correct": true}, {"expected": "Oz", "received": "Oz", "call": "wizard", "correct": true}, {"expected": 3, "received": "3", "call": "addOne(2)", "correct": true}], "printed": ""}, "3421": {"solved": true, "results": [{"expected": 2, "received": "2", "call": "number", "correct": true}, {"expected": "Oz", "received": "Oz", "call": "wizard", "correct": true}, {"expected": 3, "received": "3", "call": "addOne(2)", "correct": true}], "printed": ""}, "3412": {"solved": true, "results": [{"expected": 2, "received": "2", "call": "number", "correct": true}, {"expected": "Oz", "received": "Oz", "call": "wizard", "correct": true}, {"expected": 3, "received": "3", "call": "addOne(2)", "correct": true}], "printed": ""}, "1342": {"solved": true, "results": [{"expected": 2, "received": "2", "call": "number", "correct": true}, {"expected": "Oz", "received": "Oz", "call": "wizard", "correct": true}, {"expected": 3, "received": "3", "call": "addOne(2)", "correct": true}], "printed": ""}}, "name": "Star Fruits"}], "type": "problems", "problemset": {"pathorder": 5, "editor": {"player_id": 12376680, "nickname": "Joshua Ng", "email": "PRIVATE"}, "id": 6991389, "name": "Level 5", "description": "Iteration"}}